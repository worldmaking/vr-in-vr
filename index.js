

const path = require('path');
const fs = require('fs-extra'); 

var exec = require('child-process-promise').exec;
//var exec = require('child_process').exec;


var str;

var util = require('util')
var child;
var child2;
var child3;
var child4;

console.log("Listening to Max on port 8080\n");

//get the path of the vr-in-vr repo (which differs from machine to machine)
//and make sure that the keyframe and atomic commits get stored in the ~/git-in-vr/ repo instead
var index_dir = __dirname
var dirname = index_dir.replace("vr-in-vr", "git-in-vr");
console.log("State saves will be made to " + dirname + "/projectname/")


const WebSocket = require('ws');
const ws = new WebSocket('ws://localhost:8080');

ws.on('open', function open() {
  //ws.send('something');
});

ws.on('message', function incoming(data) {

var utc = Date.now();

//get the json state from the maxpat 'editor_scripting_node'
var state = JSON.parse(data);
var projectname = (state.project_name);
console.log(projectname + " state changed");

///////////////////////////
//check if a directory exists for the vr projectname in the 'git-in-vr' repo

const dir = (dirname + '/states/' + projectname);

fs.ensureDir(dir)
.then(() => {
//save VR state to a json in the git-in-vr repo 
  fs.writeFileSync(dir + "/state.json", data);
//Also, make a keyframes folder where whole states will be saved along with UTC timestamp
  fs.ensureDir(dir + "/keyframes")
  		.then(() => {
//duplicate this as a keyframe (for now) in /keyframes/ <<Doing this because for now its 
//easier to construct two different patchers in max from the two respective states, than it 
//is to construct the same two patches from a diff generated by git. 
  			fs.writeFileSync(dir + "/keyframes/" + utc + "_key_" + "state.json", data);
  			})
//commits.json is where utc:commit-hashes will be added each time as key-value. 
  if (fs.existsSync(dir + "/commits.json")) {
  	console.log("test");
  	//then read the file. (find the cmd for that)
  }
  else 
	fs.writeFileSync(dir + "/commits.json", "utc_hash:");
	
})
.catch(err => {
  console.error(err)
})

//TO DO NEXT:::: FIGURE OUT HOW TO APPEND THE UTC AND HASH TO THE COMMITS.JSON!!
////////////////////////////






//git: add the newly saved state.json and keyframe (if there is one)
exec('git add .', {cwd: dirname})
    
	//after we add the new files, commit them
    .then(function (result) {
        child3 = exec("git commit -m \"atomic commit\"", {cwd: dirname});

    })
        
        .then(function (result) {
        child = exec("git log --pretty=format:'%h' -n 1", {cwd: dirname}, (error, stdout, stderr) => {
        	console.log("\nCommit hash: " + stdout + "\n");

        	//prep the new state to include the commit hash
        	var hash = (stdout);
        	state.commit_hash = (hash);
        	new_state = JSON.stringify(state);
        	
        	//send the state over to max where it populates the [p scene] subpatcher 
			//with the vr-box (and eventually vr-line)
			ws.send(new_state);

			//append the utc and hash to a json file for later use. 
        	commits_json = JSON.stringify([utc, hash]);
        	console.log(commits_json);
        	//fs.appendFile(dir + "/commits.json", commits_json);
        	fs.writeFileSync(dir + "/commits.json", commits_json, {flag: 'a'}, {spaces: 2})
	        })
         })
        	.then(function (result) {
        		child4 = exec("git status", {cwd: dirname}, (error, stdout, stderr) => {
        			console.log(stdout + "\n--------------------------------------------");

        	})   
    });

 });




